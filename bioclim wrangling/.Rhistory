crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
intersections <- st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]
keep <- which(intersections == TRUE)
keep
i_lat.long
i_lat.long[keep,]
i_lat.long_trim <- i_lat.long[keep,]
i_lat.long_trim
i
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
y
rm(list=ls())
setwd("~/Documents/14 U of T/Mahler lab/Michelle/Analysis/bioclim wrangling")
library(terra)
library(sp)
#library('spocc')
require(maptools)
library(ggplot2)
library(dplyr)
library(sf)
##### read in occurrence data ####
# there are 389 species here
# pulled from Velasco 2020 sup mat
lat.long <- read.csv("ALL_RECORDS_COMBINED_31052017.csv")[, -c(1,2)]
lat.long$species <- gsub("/", ".", lat.long$species)
sp <- unique(lat.long$species)
##### read in Bioclim data ####
# bioclim data downloaded from https://www.worldclim.org/data/worldclim21.html, Jan 2022
# updated to use terra instead
rasts <- rast(list.files("./wc2.1_30s_bio", full.names=T)) # in terra
name1 <- as.character(names(rasts)) #name of bioclim rasters
##### read in shapefiles ####
ranges <- sf::st_read ("./Velasco et al 2020_sup mat/RangesAnolis 2/ANOLE_RANGE_MAPS_POE_etal_TAXONOMY_27032017.shp")
##### Bioclim values per specimen #####
# using Velasco 2020 occurrence records
for(i in sp){
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple spatial data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
intersections <- st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]
# removes points outside of range (note that seems to be overly conservative, removing points conceivably within range)
keep <- which(intersections == TRUE)
i_lat.long_trim <- i_lat.long[keep,]
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
write.csv(y,paste("./Species_bioclimfiles_ranges/",gsub(" ",".",i),".csv",sep=""))
}
ranges
ranges$BINOMIAL <- gsub("/", ".", ranges$BINOMIAL)
ranges$BINOMIAL
ranges$BINOMIAL[""aff.danieli""]
ranges$BINOMIAL[aff.danieli"]
ranges$BINOMIAL["aff.danieli"]
ranges$BINOMIAL["danieli"]
ranges$BINOMIAL["aff"]
length(unique(ranges$BINOMIAL))
length(sp)
i
subset(ranges, BINOMIAL==i)
i_ranges <- subset(ranges, BINOMIAL==i)
i_ranges
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple feature data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
# error handling for if no range map for sp
default <- "missing range map"
try({default<-st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]}, silent=FALSE)
intersections <- default
intersections
##### Bioclim values per specimen #####
# using Velasco 2020 occurrence records
for(i in sp){
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple feature data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
# error handling for if no range map for sp
default <- "missing range map"
try({default<-st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]}, silent=TRUE)
intersections <- default
# intersections <- st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]
# removes points outside of range (note that seems to be overly conservative, removing points conceivably within range)
keep <- which(intersections == TRUE)
i_lat.long_trim <- i_lat.long[keep,]
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
write.csv(y,paste("./Species_bioclimfiles_ranges/",gsub(" ",".",i),".csv",sep=""))
}
i_lat.long_trim
intersections
##### Bioclim values per specimen #####
# using Velasco 2020 occurrence records
for(i in sp){
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple feature data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
# error handling for if no range map for sp
default <- "missing range map"
try({default<-st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]}, silent=TRUE)
intersections <- default
# intersections <- st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]
# removes points outside of range (note that seems to be overly conservative, removing points conceivably within range)
keep <- which(intersections == TRUE)
i_lat.long_trim <- i_lat.long[keep,]
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long_trim), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
write.csv(y,paste("./Species_bioclimfiles_ranges/",gsub(" ",".",i),".csv",sep=""))
}
i
##### Bioclim values per specimen #####
# using Velasco 2020 occurrence records
for(i in sp){
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple feature data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
# error handling for if no range map for sp
default <- "missing range map"
try({default<-st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]}, silent=TRUE)
intersections <- default
# intersections <- st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]
# removes points outside of range (note that seems to be overly conservative, removing points conceivably within range)
keep <- which(intersections == TRUE)
i_lat.long_trim <- i_lat.long[keep,]
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long_trim), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
write.csv(y,paste("./Species_bioclimfiles_ranges/",gsub(" ",".",i),".csv",sep=""))
}
##### Bioclim values per specimen #####
# using Velasco 2020 occurrence records
for(i in sp){
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple feature data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
# error handling for if no range map for sp
default <- "missing range map"
try({default<-st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]}, silent=TRUE)
intersections <- default
# removes points outside of range (note that seems to be overly conservative, removing points conceivably within range)
keep <- which(intersections == TRUE)
i_lat.long_trim <- i_lat.long[keep,]
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long_trim), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
write.csv(y,paste("./Species_bioclimfiles_ranges/",gsub(" ",".",i),".csv",sep=""))
}
# read in sp files
setwd("Species_bioclimfiles_ranges")
files <- list.files()
# rename variables so look nicer
get_name <- function(x){
name_temp <- x[3:4]
paste(name_temp[1], name_temp[2])
}
bio_names <- do.call(rbind, lapply(strsplit(name1, "_"), get_name))
##### calculate mean for each bioclim variable over each occurrence record #####
# read in indiv sp files, extract sp name, rename bioclim columns, calculate mean for each bioclim variable
mean_bioclim = function(path) {
temp.dat = read.csv(path, header = T)[, -1]
names(temp.dat)[1:19] <- bio_names
name <- gsub('.csv','', path)
sample.length <- nrow(temp.dat)
bio.means <- data.frame(t(data.frame(colMeans(temp.dat))))
bio.means$species <- paste(name)
bio.means$sample.length <- sample.length
return(bio.means)
}
# bind all together
bioclim.data_list = lapply(files, mean_bioclim)
bioclim.data_df = data.frame(do.call(rbind, bioclim.data_list))
rownames(bioclim.data_df) <- 1:nrow(bioclim.data_df)
# there are 3 species for which there are no bioclim records
setwd("~/Documents/14 U of T/Mahler lab/Michelle/Analysis/bioclim wrangling")
##### plot occurrences ####
# https://r-spatial.org/r/2018/10/25/ggplot2-sf.html
world <- map_data("world")
# only keep parts of map where actually have occurrences (+ a little bit of buffer)
anolis_world <- subset(world, long<=max(lat.long$Longitude)+10 & long>=min(lat.long$Longitude)-10 &
lat<=max(lat.long$Latitude)+10 & lat>=min(lat.long$Latitude)-10 )
# a reminder of which bioclim variables are which: https://www.worldclim.org/data/bioclim.html
ggplot() +
geom_polygon(data = anolis_world, aes(x=long, y = lat, group = group),
fill="grey80", color="grey20") +
theme_bw() +
geom_point(data=left_join(lat.long, bioclim.data_df, by="species"),
aes(Longitude, Latitude, colour=bio.1), size=2, alpha=.5) +
labs(y= "Latitude", x = "Longitude", size=3)
View(bioclim.data_df)
# a reminder of which bioclim variables are which: https://www.worldclim.org/data/bioclim.html
ggplot() +
geom_polygon(data = anolis_world, aes(x=long, y = lat, group = group),
fill="grey80", color="grey20") +
theme_bw() +
geom_point(data=left_join(lat.long, bioclim.data_df, by="species"),
aes(Longitude, Latitude, colour=bio.1), size=2, alpha=.5, na.rm = FALSE) +
labs(y= "Latitude", x = "Longitude", size=3)
# a reminder of which bioclim variables are which: https://www.worldclim.org/data/bioclim.html
ggplot() +
geom_polygon(data = anolis_world, aes(x=long, y = lat, group = group),
fill="grey80", color="grey20") +
theme_bw() +
geom_point(data=left_join(lat.long, bioclim.data_df, by="species"),
aes(Longitude, Latitude, colour=bio.1), size=2, alpha=.5, na.rm = TRUE) +
labs(y= "Latitude", x = "Longitude", size=3)
# a reminder of which bioclim variables are which: https://www.worldclim.org/data/bioclim.html
ggplot() +
geom_polygon(data = anolis_world, aes(x=long, y = lat, group = group),
fill="grey80", color="grey20") +
theme_bw() +
geom_point(data=left_join(lat.long, bioclim.data_df, by="species"),
aes(Longitude, Latitude, colour=bio.1, na.rm=T), size=2, alpha=.5) +
labs(y= "Latitude", x = "Longitude", size=3)
left_join(lat.long, bioclim.data_df, by="species")
# a reminder of which bioclim variables are which: https://www.worldclim.org/data/bioclim.html
ggplot() +
geom_polygon(data = anolis_world, aes(x=long, y = lat, group = group),
fill="grey80", color="grey20") +
theme_bw() +
geom_point(data=left_join(lat.long, bioclim.data_df, by="species", na.rm=T),
aes(Longitude, Latitude, colour=bio.1), size=2, alpha=.5) +
labs(y= "Latitude", x = "Longitude", size=3)
# a reminder of which bioclim variables are which: https://www.worldclim.org/data/bioclim.html
ggplot() +
geom_polygon(data = anolis_world, aes(x=long, y = lat, group = group),
fill="grey80", color="grey20") +
theme_bw() +
geom_point(data=na.omit(left_join(lat.long, bioclim.data_df, by="species")),
aes(Longitude, Latitude, colour=bio.1), size=2, alpha=.5) +
labs(y= "Latitude", x = "Longitude", size=3)
unique(ranges$BINOMIAL)
sp[unique(ranges$BINOMIAL)]
unique(ranges$BINOMIAL)
sp[unique(ranges$BINOMIAL)]
# notes that there are fewer shape files than there are sp occurences (378 vs 389)
unique(ranges$BINOMIAL)[sp]
sp[which(unique(ranges$BINOMIAL))]
sp[which(sp==unique(ranges$BINOMIAL))]
sp[which(sp=unique(ranges$BINOMIAL))]
# notes that there are fewer shape files than there are sp occurences (378 vs 389)
unique(ranges$BINOMIAL)[sp]
# notes that there are fewer shape files than there are sp occurences (378 vs 389)
unique(ranges$BINOMIAL)
sp["acutus"]
sp[,"acutus"]
class(sp)
as.vector(sp)
as.vector(sp)[unique(ranges$BINOMIAL)]
as.vector(sp)[as.vector(unique(ranges$BINOMIAL))]
class(unique(ranges$BINOMIAL))
as.vector(unique(ranges$BINOMIAL))
as.vector(sp)[as.vector(unique(ranges$BINOMIAL))]
# notes that there are fewer shape files than there are sp occurences (378 vs 389)
uni <- unique(ranges$BINOMIAL)
setdiff(sp,uni)
setdiff(uni,sp)
sort(uni)
setdiff(sp,uni)
# compress gaigei into one record and rename others?
if(lat.long$species=="gaigei_1" | lat.long$species=="gaigei_2" | lat.long$species=="gaigei_3") {
"gaigei"
}
# compress gaigei into one record and rename others?
if(lat.long$species=="gaigei_1" & lat.long$species=="gaigei_2" & lat.long$species=="gaigei_3") {
"gaigei"
}
# compress gaigei into one record and rename others?
if(lat.long$species=="gaigei_1") {
"gaigei"
}
lat.long$species=="gaigei_1"
# compress gaigei into one record and rename others?
ifelse(lat.long$species=="gaigei_1" & lat.long$species=="gaigei_2" & lat.long$species=="gaigei_3", "gaigei", lat.long$species)
# compress gaigei into one record and rename others?
lat.long$species <- ifelse(lat.long$species=="gaigei_1" & lat.long$species=="gaigei_2" & lat.long$species=="gaigei_3", "gaigei", lat.long$species)
# compress gaigei into one record and rename others?
lat.long$species <- ifelse(lat.long$species=="gaigei_1" | lat.long$species=="gaigei_2" | lat.long$species=="gaigei_3", "gaigei", lat.long$species)
lat.long$species <- gsub("/", ".", lat.long$species)
sp <- unique(lat.long$species)
setwd("~/Documents/14 U of T/Mahler lab/Michelle/Analysis/bioclim wrangling")
library(terra)
library(sp)
#library('spocc')
require(maptools)
library(ggplot2)
library(dplyr)
library(sf)
##### read in occurrence data ####
# there are 389 species here
# pulled from Velasco 2020 sup mat
lat.long <- read.csv("ALL_RECORDS_COMBINED_31052017.csv")[, -c(1,2)]
# compress gaigei into one record and rename others?
lat.long$species <- ifelse(lat.long$species=="gaigei_1" | lat.long$species=="gaigei_2" | lat.long$species=="gaigei_3", "gaigei", lat.long$species)
lat.long$species <- gsub("/", ".", lat.long$species)
sp <- unique(lat.long$species)
##### read in Bioclim data ####
# bioclim data downloaded from https://www.worldclim.org/data/worldclim21.html, Jan 2022
# updated to use terra instead
rasts <- rast(list.files("./wc2.1_30s_bio", full.names=T)) # in terra
name1 <- as.character(names(rasts)) #name of bioclim rasters
##### read in shapefiles ####
ranges <- sf::st_read ("./Velasco et al 2020_sup mat/RangesAnolis 2/ANOLE_RANGE_MAPS_POE_etal_TAXONOMY_27032017.shp")
ranges$BINOMIAL <- gsub("/", ".", ranges$BINOMIAL)
# notes that there are fewer shape files than there are sp occurences (378 vs 389)
uni <- unique(ranges$BINOMIAL)
setdiff(sp,uni)
##### Bioclim values per specimen #####
# using Velasco 2020 occurrence records
for(i in sp){
print(i)
# pulls out lat and long of each sp
i_lat.long <- subset(lat.long, species==i)[, 2:3]
rownames(i_lat.long) <- 1:nrow(i_lat.long)
i_ranges <- subset(ranges, BINOMIAL==i)
# convert i_lat.long into simple feature data
i_lat.longSP <- st_as_sf(i_lat.long, coords = c("Longitude", "Latitude"),
crs = 4326, agr = "constant")
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
# error handling for if no range map for sp
default <- "missing range map"
try({default<-st_intersects(i_lat.longSP, i_ranges, sparse=F)[,1]}, silent=TRUE)
intersections <- default
# removes points outside of range (note that seems to be overly conservative, removing points conceivably within range)
keep <- which(intersections == TRUE)
i_lat.long_trim <- i_lat.long[keep,]
values<-c()
for (j in 1:nlyr(rasts)){
rast.value<-lapply(terra::extract(rasts[[j]], i_lat.long_trim), na.exclude)[[2]]
length=length(unlist(rast.value))
values<-append(values,unlist(rast.value))
}
# associates bioclim names with each species specific file
assign(gsub(" ",".",i), as.data.frame(matrix(values,nrow=length,ncol=19)))
y=get(gsub(" ",".",i))
colnames(y)=name1
assign(gsub(" ",".",i),y)
write.csv(y,paste("./Species_bioclimfiles_ranges/",gsub(" ",".",i),".csv",sep=""))
}
# read in sp files
setwd("Species_bioclimfiles_ranges")
files <- list.files()
# rename variables so look nicer
get_name <- function(x){
name_temp <- x[3:4]
paste(name_temp[1], name_temp[2])
}
bio_names <- do.call(rbind, lapply(strsplit(name1, "_"), get_name))
##### calculate mean for each bioclim variable over each occurrence record #####
# read in indiv sp files, extract sp name, rename bioclim columns, calculate mean for each bioclim variable
mean_bioclim = function(path) {
temp.dat = read.csv(path, header = T)[, -1]
names(temp.dat)[1:19] <- bio_names
name <- gsub('.csv','', path)
sample.length <- nrow(temp.dat)
bio.means <- data.frame(t(data.frame(colMeans(temp.dat))))
bio.means$species <- paste(name)
bio.means$sample.length <- sample.length
return(bio.means)
}
# bind all together
bioclim.data_list = lapply(files, mean_bioclim)
bioclim.data_df = data.frame(do.call(rbind, bioclim.data_list))
rownames(bioclim.data_df) <- 1:nrow(bioclim.data_df)
# there are 3 species for which there are no bioclim records
setwd("~/Documents/14 U of T/Mahler lab/Michelle/Analysis/bioclim wrangling")
write.csv(bioclim.data_df, "anolis_bioclim_ranges.csv")
25*25
25*25/620
i
i_lat.long
i_ranges
i_ranges
library(terra)
intersect(i_lat.longSP, i_ranges)
i_lat.longSP
i_ranges
intersect(i_lat.long, i_ranges)
crop(i_ranges, i_lat.longSP)
terra::crop(i_ranges, i_lat.longSP)
sf::crop(i_ranges, i_lat.longSP)
i_ranges <- subset(ranges, BINOMIAL==i)
i_ranges
crop(rasts[[1]], i_ranges)
plot(crop(rasts[[1]], i_ranges))
st_crs(i_ranges) <- CRS("+init=epsg:4326")  # add same coordinate system
plot(crop(rasts[[1]], i_ranges))
crop(rasts[[1]], i_ranges)
intersect(rasts[[1]], i_ranges)
test <- intersect(rasts[[1]], i_ranges)
test <- intersect( i_ranges,rasts[[1]])
i_ranges <- subset(ranges, BINOMIAL==i)
terra::intersect(rasts[[i]], i_ranges)
terra::intersect(rasts[[1]], i_ranges)
mclapply(terra::intersect(rasts[[1]], i_ranges), function, mc.cores = detectCores())
# there are 3 species for which there are no bioclim records
setwd("~/Documents/14 U of T/Mahler lab/Michelle/Analysis/bioclim wrangling")
# differences between bioclim avgs?
means1 <- read.csv(file="anolis_bioclim_ranges.csv")
means2 <- read.csv(file="anolis_bioclim.csv")
plot(means1$bio.1, means2$bio.1)
means.join <- left_join(means1, means2)
head(means1)
head(means2)
means.join <- left_join(means1, means2, by="species")
plot(means.join$bio.1.x, means.join$bio.1.y)
plot(means.join$bio.2.x, means.join$bio.2.y)
plot(means.join$bio.3.x, means.join$bio.3.y)
plot(means.join$bio.4.x, means.join$bio.4.y)
plot(means.join$bio.5.x, means.join$bio.5.y)
head(means.join)
dev.off()
plot(means.join$bio.5.x, means.join$bio.5.y,
xlab="occurences trimmed to range map",
ylab="all cccurences")
abline(a=0, b=1)
abline(a=0, b=1, col="darkred")
plot(means.join$bio.1.x, means.join$bio.1.y,
xlab="occurences trimmed to range map",
ylab="all cccurences")
abline(a=0, b=1, col="darkred")
plot(means.join$bio.2.x, means.join$bio.2.y,
xlab="occurences trimmed to range map",
ylab="all cccurences")
abline(a=0, b=1, col="darkred")
